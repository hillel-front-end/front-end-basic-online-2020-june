$color_green: green;

.container {
    font-size: 12px;
    .header {
        color: $color_green;
        @media screen and (max-width: 1200px) {
            
        }

        @media screen and (max-width: 768px) {
            
        }

        @media screen and (max-width: 420px) {
            
        }
    }

    .drop-down__menu-item {.
        display: inline-block;
        padding: 10px;
        border-radius: 10px;
        border: 1px solid red;
        &:hover {
            border: 1px solid $color_green;
        }

        &:after {
            content: '123';
        }

        &.foo {
            color: white;
        }

    }

    // .button:hover {
    //     border: 1px solid green;
    // }   

    // .button:after {
    //     content: '123';
    // }

    $selector: '#footer';

    #{$selector} {
        color: white;
    }

}


// ------ css fragment + extend ---------
%center {
    width: 80%;
    margin: 0 auto;
}

%flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
}

.header {
    color: red;
    border: 1px solid red;
    @extend %center;
    @extend %flex-center;
}

.footer {
    background-color: red;
    @extend %center;
    @extend %flex-center;
}

.poster {
    @extend %center;
}

.gallery {
    // display: flex;
    // justify-content: center;
    // align-items: center;
    @extend %flex-center;
    @extend %center;
}

.foo {
    @extend %center;
}

// ---------- mixin ------

@mixin flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
}

@mixin flex-row {
    display: flex;
    font-display: row;
    justify-content: center;
    align-items: center;
}

// $fd: column;
// $jc: center;
// $ai: flex-end;


// ---------- mixin + params ------
// @mixin flex($fd, $jc, $ai) {
//     display: flex;
//     flex-direction: $fd;
//     justify-content: $jc;
//     align-items: $ai;
// }



.foo2 {
    // @include flex-center();
    // @include flex(row, center, flex-end);

}


// @content + @mixin 

@mixin flex {
    @content;
}

// .foo3 {
//     // @extend %flex-center;
//     // @include flex-center();
//     // @include flex(column, space-between, center);
// }

// "className": ".diagram-container",
$diagram: (
    "className": ".diagram-container",
    "width": 200px,
    "height": 200px,
    "color": red,
    "font-size": 30px,
    "background-color": blue
);

// ma-get(map, key)
// map-get($diagram, "className")

// #{map-get($diagram, "className")} {
//     width: map-get($diagram, "width");
//     height: map-get($diagram, "width");
//     font-size: map-get($diagram, "font-size"); 
// }

// !=, ==
// .foo-7 {
//     @each $key, $value in $diagram {
//         @if $key != "className" { // key = "className"
//             #{$key}: #{$value};
//         }
//     }
// }

// 1 $var: 1
// 2 $var: 2

// .gallery-item {
// //    background-color; 
// }

$gallery-item-width: 200px;
$galler-indent: 10px;

@for $var from 1 through 3 {
    .gallery-item-#{$var}:nth-child(#{$var}) {
        color: blue;
        background-position-x: $var * ($gallery-item-width + $galler-indent);
    }
}


$breakpoints: (
    desktop: 1200px,
    laptop: 1100px,
    tablet: 900px,
    mobile: 450px 
);
// breakpoint == 768px
// map-get($breakpoints, $platform) =>900px
@mixin media($platform, $breakpoint) {
    @if map-get($breakpoints, $platform) == $breakpoint {
        @media screen and (max-width: $breakpoint) {
            @content;
        }
    }
}

.container {
    font-size: 12px;
    .header {
        color: $color_green;
        @include media(desktop, 1200px) {
            color: blue;
            width: 50%;
        }

        @include media(tablet, 900px) {
            color: blue;
            width: 33.33%;
        }

        @include media(mobile, 450px) {
            color: blue;
            width:  100%;
        }
    }
}


